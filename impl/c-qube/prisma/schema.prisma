generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  schemas  = ["spec", "dimensions", "transformers", "datasets"]
}

model InstrumentType {
  type         String         @id @default(cuid())
  name         String
  description  String?
  EventGrammar EventGrammar[]

  @@schema("spec")
}

model DimensionGrammar {
  id          Int       @id @default(autoincrement())
  name        String    @unique
  description String?
  schema      Json
  type        String
  storage     Json
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  deletedAt   DateTime?

  @@schema("spec")
}

model DatasetGrammar {
  id          Int       @id @default(autoincrement())
  name        String    @unique
  description String?
  dimensions  Json
  schema      Json
  type        String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  deletedAt   DateTime?
  Pipe        Pipe[]

  @@schema("spec")
}

model EventGrammar {
  id                 Int            @id @default(autoincrement())
  name               String         @unique
  instrument         InstrumentType @relation(fields: [instrumentTypeType], references: [type])
  schema             Json
  instrumentField    String
  isActive           Boolean        @default(true)
  description        String?
  type               String
  createdAt          DateTime       @default(now())
  updatedAt          DateTime       @updatedAt
  deletedAt          DateTime?
  instrumentTypeType String
  Pipe               Pipe[]

  @@schema("spec")
}

model Transformer {
  id             Int       @id @default(autoincrement())
  name           String    @unique
  event          String
  dataset        String
  transformSync  String
  transformAsync String
  type           String
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  deletedAt      DateTime?
  Pipe           Pipe[]

  @@schema("transformers")
}

model Pipe {
  id               Int            @id @default(autoincrement())
  transformer      Transformer    @relation(fields: [transformerId], references: [id])
  event            EventGrammar   @relation(fields: [eventGrammarId], references: [id])
  dataset          DatasetGrammar @relation(fields: [datasetGrammarId], references: [id])
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @updatedAt
  deletedAt        DateTime?
  transformerId    Int
  eventGrammarId   Int
  datasetGrammarId Int

  @@schema("transformers")
}
